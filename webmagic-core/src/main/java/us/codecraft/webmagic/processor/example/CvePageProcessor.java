package us.codecraft.webmagic.processor.example;

import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Site;
import us.codecraft.webmagic.Spider;
import us.codecraft.webmagic.downloader.HttpClientDownloader;
import us.codecraft.webmagic.pipeline.ConsolePipeline;
import us.codecraft.webmagic.pipeline.DatabasePipeline;
import us.codecraft.webmagic.processor.PageProcessor;
import us.codecraft.webmagic.proxy.Proxy;
import us.codecraft.webmagic.proxy.SimpleProxyProvider;

import java.util.ArrayList;
import java.util.List;

//import us.codecraft.webmagic.pipeline.JsonFilePipeline;

/**
 * @author code4crafter@gmail.com <br>
 * @since 0.3.2
 */
public class CvePageProcessor implements PageProcessor {

    private Site site = Site.me().setRetryTimes(3).setSleepTime((int)Math.random()*2000+5000).setTimeOut(20000);
    public int pagecount = 1;

    @Override
    public void process(Page page) {

        //将漏洞详情页面的链接添加到待处理队列中
        List<String> detailurls = page.getHtml().xpath("//tr[@class='srrowns']/td[@nowrap]/a/text()").all();
        List<String> extraurls = new ArrayList<>();
        for(int i=0,j=0;i<detailurls.size();i++){
            if(detailurls.get(i).matches("CVE-.*"))extraurls.add(j++, "https://www.cvedetails.com/cve/" + detailurls.get(i));
        }
        page.addTargetRequests(extraurls);

        //把其他列表页添加到队列里
        if((++pagecount)<=2470)page.addTargetRequest("https://www.cvedetails.com/vulnerability-list.php?vendor_id=0&product_id=0&version_id=0&page="+pagecount+"&hasexp=0&opdos=0&opec=0&opov=0&opcsrf=0&opgpriv=0&opsqli=0&opxss=0&opdirt=0&opmemc=0&ophttprs=0&opbyp=0&opfileinc=0&opginf=0&cvssscoremin=0&cvssscoremax=0&year=0&month=0&cweid=0&order=1&trc=123454&sha=3cf9994d68386594f1283fc226cf51dad5fe72b8");

        //从漏洞详情页面抽取所需信息，若为其他页面则忽略
        page.putField("CveId",page.getHtml().xpath("//h1/a/text()").toString());
        if(page.getResultItems().get("CveId")==null){
            page.setSkip(true);
            return;
        }
        page.putField("Desc",page.getHtml().xpath("//div[@class='cvedetailssummary']/text()").toString());
        String date = page.getHtml().xpath("//span[@class='datenote']/text()").toString();
        page.putField("PublishDate",date.substring(15,26));
        page.putField("UpdateDate",date.substring(45));
        page.putField("Cvss",page.getHtml().xpath("//div[@class='cvssbox']/text()").toString());
        page.putField("ConImpact",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[2]/td/span/text()").toString());
        page.putField("IntegImpact",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[3]/td/span/text()").toString());
        page.putField("AvaImpact",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[4]/td/span/text()").toString());
        page.putField("AccComplexity",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[5]/td/span/text()").toString());
        page.putField("Auth",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[6]/td/span/text()").toString());
        page.putField("GainAcc",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[7]/td/span/text()").toString());
        page.putField("VulnType",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[8]/td/span/text()").toString());
        page.putField("CweId",page.getHtml().xpath("//table[@id='cvssscorestable']//tr[9]/td/a/text()").toString());
        String cweref = page.getHtml().xpath("//table[@id='cvssscorestable']//tr[9]/td/a/@href").toString();
        if(cweref!=null)cweref=cweref.substring(2);
        page.putField("CweRef",cweref);
        //page.putField("CweId",page.getHtml().xpath("//table[@id='cvssscorestable']/tr[9]/td/a/text()").toString());
        List<String> proN = (List<String>) (page.getHtml().xpath("//table[@id='vulnprodstable']//td/a/@title").all());
        //System.out.println(proN.size());
//        List<String> por = new ArrayList<>();
//        for(int i=0;i<proN.size();i=i+4){
//            por.add(proN.get(i+2));
//        }
//        List<String> proV = (List<String>) page.getHtml().xpath("//table[@id='vulnprodstable']/tr/td[5]/text()").all();
//        for(int i=0;i<proN.size() && i<proV.size();i++)proN.set(i,proN.get(i)+proV.get(i));
        //page.putField("AffectedPro",por.toString());
        List<String> entityName = page.getHtml().xpath("//table[@id='vulnversconuttable']//td/a/text()").all();
        List<String> entity = page.getHtml().xpath("//table[@id='vulnversconuttable']//td[@class='num']/text()").all();
        for(int i=0,j=0;i<entity.size() && j+1<entityName.size();i++,j=j+2){
            entity.set(i,entityName.get(j)+"-"+entityName.get(j+1)+"-"+entity.get(i));
        }
        page.putField("AffectedEntity",entity.toString());
        //List<String> ref = page.getHtml().xpath("//a[@title='External url']/@href").all();
        //System.out.println(ref.size());
        page.putField("Reference",page.getHtml().xpath("//a[@title='External url']/@href").all().toString());
    }

    @Override
    public Site getSite() {
        return site;
    }

    public static void main(String[] args) {
        //HttpClientDownloader httpClientDownloader = new HttpClientDownloader();
        //httpClientDownloader.setProxyProvider(SimpleProxyProvider.from(new Proxy("192.168.43.30",1082)));
        Spider.create(new CvePageProcessor()).addUrl("https://www.cvedetails.com/vulnerability-list.php?vendor_id=0&product_id=0&version_id=0&page=1&hasexp=0&opdos=0&opec=0&opov=0&opcsrf=0&opgpriv=0&opsqli=0&opxss=0&opdirt=0&opmemc=0&ophttprs=0&opbyp=0&opfileinc=0&opginf=0&cvssscoremin=0&cvssscoremax=0&year=0&month=0&cweid=0&order=1&trc=123454&sha=3cf9994d68386594f1283fc226cf51dad5fe72b8").addPipeline(new DatabasePipeline()).thread(5).run();
    }
}
